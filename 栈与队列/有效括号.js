/**
 * 给定一个只包括‘（’， ‘）’， ‘{‘， ‘}’， ‘[‘， ‘]’的字符串，判断字符串是否有效。
 * 有效字符串需满足：
 * 左括号必须用相同的类型的右括号闭合。
 * 左括号必须以正确的顺序闭合。
 * 注意，，空字符串可被认为是有效字符串。
 * 示例 1:
 * 输入: "()"
 * 输出: true
 * 示例 2:
 * 输入: "()[]{}"
 * 输出: true
 * 示例 3:
 * 输入: "(]"
 * 输出: false
 * 示例 4:
 * 输入: "([)]"
 * 输出: false
 * 示例 5:
 * 输入: "{[]}"
 * 输出: true
 */

/**
 * 三种不匹配的情况
 * 1. 有左括号没有右括号
 * 2. 有右括号没有左括号
 * 3. 左括号和右括号类型不匹配
 */

const isValid = function(s) {
  const stack = [],
  map = {
    '(': ')',
    '[': ']',
    '{': '}'
  }

  for(const x of s) {
    if(x in map) {
      stack.push(x);
      continue;
    };
    if(map[stack.pop()] !== x) return false;
  }
  return !stack.length;
}